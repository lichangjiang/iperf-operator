/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package alpha1

import (
	alpha1 "github.com/lichangjiang/iperf-operator/pkg/apis/iperf.test.svc/alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// IperfTaskLister helps list IperfTasks.
type IperfTaskLister interface {
	// List lists all IperfTasks in the indexer.
	List(selector labels.Selector) (ret []*alpha1.IperfTask, err error)
	// IperfTasks returns an object that can list and get IperfTasks.
	IperfTasks(namespace string) IperfTaskNamespaceLister
	IperfTaskListerExpansion
}

// iperfTaskLister implements the IperfTaskLister interface.
type iperfTaskLister struct {
	indexer cache.Indexer
}

// NewIperfTaskLister returns a new IperfTaskLister.
func NewIperfTaskLister(indexer cache.Indexer) IperfTaskLister {
	return &iperfTaskLister{indexer: indexer}
}

// List lists all IperfTasks in the indexer.
func (s *iperfTaskLister) List(selector labels.Selector) (ret []*alpha1.IperfTask, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*alpha1.IperfTask))
	})
	return ret, err
}

// IperfTasks returns an object that can list and get IperfTasks.
func (s *iperfTaskLister) IperfTasks(namespace string) IperfTaskNamespaceLister {
	return iperfTaskNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// IperfTaskNamespaceLister helps list and get IperfTasks.
type IperfTaskNamespaceLister interface {
	// List lists all IperfTasks in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*alpha1.IperfTask, err error)
	// Get retrieves the IperfTask from the indexer for a given namespace and name.
	Get(name string) (*alpha1.IperfTask, error)
	IperfTaskNamespaceListerExpansion
}

// iperfTaskNamespaceLister implements the IperfTaskNamespaceLister
// interface.
type iperfTaskNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all IperfTasks in the indexer for a given namespace.
func (s iperfTaskNamespaceLister) List(selector labels.Selector) (ret []*alpha1.IperfTask, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*alpha1.IperfTask))
	})
	return ret, err
}

// Get retrieves the IperfTask from the indexer for a given namespace and name.
func (s iperfTaskNamespaceLister) Get(name string) (*alpha1.IperfTask, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(alpha1.Resource("iperftask"), name)
	}
	return obj.(*alpha1.IperfTask), nil
}
